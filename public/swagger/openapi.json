{
    "openapi": "3.0.0",
    "info": {
        "title": "Inventory management system API",
        "description": "Inventory web based system for tracking items and stuff in company",
        "version": "1.1.0"
    },
    "servers": [
        {
            "url": "http://www.insystem-api.localhost/"
        }
    ],
    "paths": {
        "/api/FirebaseStorage/getAllFilesFromDir/{dir}": {
            "get": {
                "tags": [
                    "FirebaseStorage"
                ],
                "description": "Get all files from single directory",
                "operationId": "getAllFilesFromDir",
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Logs/logAccess": {
            "post": {
                "tags": [
                    "Logs"
                ],
                "operationId": "logAccess",
                "requestBody": {
                    "description": "Log user access on login",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "isLoggedInSuccessfully": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "workerId": {
                                        "type": "integer",
                                        "example": "0"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Logs/getAllLogs": {
            "get": {
                "tags": [
                    "Logs"
                ],
                "description": "Get all previous logs",
                "operationId": "getAllLogs",
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/createUser": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "createUser",
                "requestBody": {
                    "description": "Create new user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "worker_fname": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "worker_lname": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "worker_email": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/getAllUsers": {
            "get": {
                "tags": [
                    "Users"
                ],
                "description": "Get all users and their information",
                "operationId": "getAllUsers",
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/getUserInfo/{worker_id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "description": "Get user info",
                "operationId": "getSingleUser",
                "parameters": [
                    {
                        "name": "worker_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/registerUser": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "registerUser",
                "requestBody": {
                    "description": "Create new user account",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "phoneNumber": {
                                        "type": "string",
                                        "example": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/loginUser": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "loginUser",
                "requestBody": {
                    "description": "Enter user email and password",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "example@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Your password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Wrong credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/sendPasswordResetEmail": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "sendPasswordResetEmail",
                "requestBody": {
                    "description": "Provide user email",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "example@email.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/activateUserAccount/{token}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "description": "Do not run this route from swagger since it's supposed to redirect user to specific page. <br/> Swagger will return `NetworkError` cause redirection can not happen",
                "operationId": "activateUserAccount",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/updateUser": {
            "put": {
                "tags": [
                    "Users"
                ],
                "operationId": "updateUser",
                "requestBody": {
                    "description": "Update user informations",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "worker_id": {
                                        "type": "integer",
                                        "example": "0"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "+12345"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "example": "0"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/resetPassword": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "resetPassword",
                "requestBody": {
                    "description": "Reset password from email",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "hash": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "newPassword": {
                                        "type": "string",
                                        "example": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/setNewPassword": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "setNewPassword",
                "requestBody": {
                    "description": "This endpoint servers as a option for loged user to reset password",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "worker_id": {
                                        "type": "integer",
                                        "example": "0"
                                    },
                                    "old_password": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/changeTempPassword": {
            "put": {
                "tags": [
                    "Users"
                ],
                "operationId": "changeTempPassword",
                "requestBody": {
                    "description": "Endpoint for chaning temp password that has been set for user (employer) by admin",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "worker_id": {
                                        "type": "integer",
                                        "example": "0"
                                    },
                                    "oldPassword": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "newPassword": {
                                        "type": "string",
                                        "example": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/banUser/{worker_id}": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "description": "Endpoint for admin to ban user account",
                "operationId": "banUser",
                "parameters": [
                    {
                        "name": "worker_id",
                        "in": "path",
                        "description": "ID of user to ban",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/revokeUserAccess/{worker_id}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "description": "Endpoint for admin to revoke ban for banned users",
                "operationId": "revokeUserAccess",
                "parameters": [
                    {
                        "name": "worker_id",
                        "in": "path",
                        "description": "ID of user to revoke ban",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Companies/addCompany": {
            "post": {
                "tags": [
                    "Companies"
                ],
                "operationId": "addCompany",
                "requestBody": {
                    "description": "Create new company",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "company_name": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "company_mail": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "company_state": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "company_address": {
                                        "type": "string",
                                        "example": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Companies/getAllCompanies": {
            "get": {
                "tags": [
                    "Companies"
                ],
                "description": "Get all companies and their information",
                "operationId": "getAllCompanies",
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Companies/getCompanyById": {
            "get": {
                "tags": [
                    "Companies"
                ],
                "description": "Get company by id",
                "operationId": "getCompanyById",
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Companies/updateCompany": {
            "put": {
                "tags": [
                    "Companies"
                ],
                "operationId": "updateCompany",
                "requestBody": {
                    "description": "Update company information",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "company_id": {
                                        "type": "integer",
                                        "example": "0"
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "example": "NameCo"
                                    },
                                    "company_mail": {
                                        "type": "string",
                                        "example": "officecompany@domain.com"
                                    },
                                    "company_state": {
                                        "type": "string",
                                        "example": "USA"
                                    },
                                    "company_address": {
                                        "type": "string",
                                        "example": "Address 1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Companies/deleteCompany/{company_id}": {
            "delete": {
                "tags": [
                    "Companies"
                ],
                "operationId": "deleteCompany",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "description": "ID of company to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Company not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Admins/loginAdmin": {
            "post": {
                "tags": [
                    "Admins"
                ],
                "operationId": "loginAdmin",
                "requestBody": {
                    "description": "Authenticate admin",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "example@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Your password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Wrong credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Tests/listTest": {
            "post": {
                "tags": [
                    "Tests"
                ],
                "summary": "Create a Test",
                "operationId": "0a4548179af4eff5036a5a81e6956a39",
                "requestBody": {
                    "description": "Data packet for Test",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "testItems": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "firstName": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "companyId": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "accountNumber": {
                                                    "type": "number",
                                                    "example": ""
                                                },
                                                "netPay": {
                                                    "type": "money",
                                                    "example": ""
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "firstName": "Bob",
                                                "lastName": "Fanger",
                                                "company": "Triple",
                                                "id": "808"
                                            },
                                            {
                                                "firstName": "",
                                                "lastName": "",
                                                "company": "",
                                                "id": ""
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter the Bearer Authorization string as following: `Bearer Generated-JWT-Token`",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}