{
    "openapi": "3.0.0",
    "info": {
        "title": "Inventory management system API",
        "description": "Complete API documentation for web based invetory system <br/> Documentation is based on `OAS 3.0` and API is running on `PHP 8.2`",
        "contact": {
            "name": "Developer",
            "email": "stefanbvts@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/license/mit"
        },
        "version": "1.1.0"
    },
    "servers": [
        {
            "url": "http://www.insystem-api.localhost/",
            "description": "Apache"
        }
    ],
    "paths": {
        "/api/FirebaseStorage/getFileByName/{dir}/{fileName}": {
            "get": {
                "tags": [
                    "FirebaseStorage"
                ],
                "description": "Get single file by its name. <br/> Note that you should also send dir location of that file",
                "operationId": "getFileByName",
                "parameters": [
                    {
                        "name": "dir",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/FirebaseStorage/getAllFilesByDir/{dir}": {
            "get": {
                "tags": [
                    "FirebaseStorage"
                ],
                "description": "Get all files by directory. For example, you can retrieve files from `mydir` or `mydir-mysubdir`. <br/> Sending directory name with `\\` will cause `Not Found - 404`",
                "operationId": "getAllFilesByDir",
                "parameters": [
                    {
                        "name": "dir",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/FirebaseStorage/uploadFile": {
            "post": {
                "tags": [
                    "FirebaseStorage"
                ],
                "description": "Upload file to firebase storage and save it's into to database",
                "operationId": "uploadFile",
                "requestBody": {
                    "description": "Create new file object and upload it to firebase <br/> You can read file you whish to upload with `fopen($file, r)` or `file_gets_content($file)`",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "example": "decoded-file"
                                    },
                                    "upload_options": {
                                        "properties": {
                                            "file-type": {
                                                "type": "integer",
                                                "example": 0
                                            },
                                            "dir": {
                                                "type": "string",
                                                "example": "mydir/"
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "name"
                                            },
                                            "type": {
                                                "type": "string",
                                                "example": "mime/type"
                                            },
                                            "predefinedAcl": {
                                                "type": "string",
                                                "example": "PUBLICREAD"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/FirebaseStorage/deleteFile/{dir}/{fileName}": {
            "delete": {
                "tags": [
                    "FirebaseStorage"
                ],
                "description": "Delete file from firebase storage",
                "operationId": "deleteFile",
                "parameters": [
                    {
                        "name": "dir",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/FirebaseStorage/downloadFile/{remoteDir}/{fileName}/{destinationDir}": {
            "get": {
                "tags": [
                    "FirebaseStorage"
                ],
                "description": "Download file from firebase to local directory",
                "operationId": "downloadFile",
                "parameters": [
                    {
                        "name": "remoteDir",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "destinationDir",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Logs/logAccess": {
            "post": {
                "tags": [
                    "Logs"
                ],
                "operationId": "logAccess",
                "requestBody": {
                    "description": "Log user access on login",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "isLoggedInSuccessfully": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "workerId": {
                                        "type": "integer",
                                        "example": "0"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Logs/getAllLogs": {
            "get": {
                "tags": [
                    "Logs"
                ],
                "description": "Get all previous logs",
                "operationId": "getAllLogs",
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/createUser": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "createUser",
                "requestBody": {
                    "description": "Create new user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "worker_fname": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "worker_lname": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "worker_email": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/getAllUsers": {
            "get": {
                "tags": [
                    "Users"
                ],
                "description": "Get all users and their information",
                "operationId": "getAllUsers",
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/getUserInfo/{worker_id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "description": "Get user info",
                "operationId": "getSingleUser",
                "parameters": [
                    {
                        "name": "worker_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/registerUser": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "registerUser",
                "requestBody": {
                    "description": "Create new user account",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "phoneNumber": {
                                        "type": "string",
                                        "example": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/loginUser": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "loginUser",
                "requestBody": {
                    "description": "Enter user email and password",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "example@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Your password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Wrong credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/sendPasswordResetEmail": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "sendPasswordResetEmail",
                "requestBody": {
                    "description": "Provide user email",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "example@email.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/activateUserAccount/{token}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "description": "Do not run this route from swagger since it's supposed to redirect user to specific page. <br/> Swagger will return `NetworkError` cause redirection can not happen",
                "operationId": "activateUserAccount",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/updateUser": {
            "put": {
                "tags": [
                    "Users"
                ],
                "operationId": "updateUser",
                "requestBody": {
                    "description": "Update user informations",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "worker_id": {
                                        "type": "integer",
                                        "example": "0"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "+12345"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "example": "0"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/uploadUserPicture/{worker_id}": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "Upload user profile image",
                "operationId": "uploadUserPicture",
                "parameters": [
                    {
                        "name": "worker_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "File body",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "user_image": {
                                        "type": "string",
                                        "format": "base64"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/deleteUserPicture/{worker_id}/{userPicture}": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "description": "Permanently delete user picture <br/> This route removes picture from database and from firebase storage <br/> Picture delete with this route `can not be restored`",
                "operationId": "deleteUserPicture",
                "parameters": [
                    {
                        "name": "worker_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "userPicture",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/resetPassword": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "resetPassword",
                "requestBody": {
                    "description": "Reset password from email",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "hash": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "newPassword": {
                                        "type": "string",
                                        "example": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/setNewPassword": {
            "post": {
                "tags": [
                    "Users"
                ],
                "operationId": "setNewPassword",
                "requestBody": {
                    "description": "This endpoint servers as a option for loged user to reset password",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "worker_id": {
                                        "type": "integer",
                                        "example": "0"
                                    },
                                    "old_password": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/changeTempPassword": {
            "put": {
                "tags": [
                    "Users"
                ],
                "operationId": "changeTempPassword",
                "requestBody": {
                    "description": "Endpoint for chaning temp password that has been set for user (employer) by admin",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "worker_id": {
                                        "type": "integer",
                                        "example": "0"
                                    },
                                    "oldPassword": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "newPassword": {
                                        "type": "string",
                                        "example": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/banUser/{worker_id}": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "description": "Endpoint for admin to ban user account",
                "operationId": "banUser",
                "parameters": [
                    {
                        "name": "worker_id",
                        "in": "path",
                        "description": "ID of user to ban",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/revokeUserAccess/{worker_id}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "description": "Endpoint for admin to revoke ban for banned users",
                "operationId": "revokeUserAccess",
                "parameters": [
                    {
                        "name": "worker_id",
                        "in": "path",
                        "description": "ID of user to revoke ban",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/updateUserByAdmin": {
            "put": {
                "tags": [
                    "Users"
                ],
                "description": "Endpoint for admin to update information about users",
                "operationId": "updateUserByAdmin",
                "requestBody": {
                    "description": "New company information",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "company_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "worker_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "worker_fname": {
                                        "type": "string",
                                        "example": "Name"
                                    },
                                    "worker_lname": {
                                        "type": "string",
                                        "example": "Last"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "role"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/enrollUserToTask/{worker_id}/{task_id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "description": "Enroll user to the task",
                "operationId": "enrollUserToTask",
                "parameters": [
                    {
                        "name": "worker_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Users/removeUserFromTask/{worker_id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "description": "Remove user to the task",
                "operationId": "removeUserFromTask",
                "parameters": [
                    {
                        "name": "worker_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Companies/addCompany": {
            "post": {
                "tags": [
                    "Companies"
                ],
                "operationId": "addCompany",
                "requestBody": {
                    "description": "Create new company",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "company_name": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "company_mail": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "company_state": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "company_address": {
                                        "type": "string",
                                        "example": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Companies/getAllCompanies": {
            "get": {
                "tags": [
                    "Companies"
                ],
                "description": "Get all companies and their information",
                "operationId": "getAllCompanies",
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Companies/getCompanyById": {
            "get": {
                "tags": [
                    "Companies"
                ],
                "description": "Get company by id",
                "operationId": "getCompanyById",
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Companies/updateCompany": {
            "put": {
                "tags": [
                    "Companies"
                ],
                "operationId": "updateCompany",
                "requestBody": {
                    "description": "Update company information",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "company_id": {
                                        "type": "integer",
                                        "example": "0"
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "example": "NameCo"
                                    },
                                    "company_mail": {
                                        "type": "string",
                                        "example": "officecompany@domain.com"
                                    },
                                    "company_state": {
                                        "type": "string",
                                        "example": "USA"
                                    },
                                    "company_address": {
                                        "type": "string",
                                        "example": "Address 1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Companies/deleteCompany/{company_id}": {
            "delete": {
                "tags": [
                    "Companies"
                ],
                "operationId": "deleteCompany",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "description": "ID of company to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Company not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Companies/restoreCompany/{company_id}": {
            "put": {
                "tags": [
                    "Companies"
                ],
                "description": "Endpoint for admin to restored deleted company",
                "operationId": "restoreCompany",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "description": "ID of company that needs to be restored",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Company not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Rooms/addRoom": {
            "post": {
                "tags": [
                    "Rooms"
                ],
                "operationId": "addRoom",
                "requestBody": {
                    "description": "Create new room",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "company_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "room_name": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "room_number": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "room_description": {
                                        "type": "string",
                                        "example": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Rooms/getAllRooms": {
            "get": {
                "tags": [
                    "Rooms"
                ],
                "description": "Get all rooms",
                "operationId": "getAllRooms",
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Rooms/getAllRoomsByCompanyId/{company_id}": {
            "get": {
                "tags": [
                    "Rooms"
                ],
                "description": "Get all rooms by company",
                "operationId": "getAllRoomsByCompanyId",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Rooms/deleteRoom/{room_id}": {
            "delete": {
                "tags": [
                    "Rooms"
                ],
                "description": "Delete inactive rooms (rooms that have no active inventory event)",
                "operationId": "deleteRoom",
                "parameters": [
                    {
                        "name": "room_id",
                        "in": "path",
                        "description": "ID of room to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Room not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Rooms/updateRoom": {
            "put": {
                "tags": [
                    "Rooms"
                ],
                "operationId": "updateRoom",
                "requestBody": {
                    "description": "Update room information",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "room_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "room_name": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "room_number": {
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "room_description": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "isActive": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Rooms/checkRoomForActiveTasks/{room_id}": {
            "get": {
                "tags": [
                    "Rooms"
                ],
                "description": "Check if room has active tasks",
                "operationId": "checkRoomForActiveTasks",
                "parameters": [
                    {
                        "name": "room_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Items/getItemsByRoom/{room_id}": {
            "get": {
                "tags": [
                    "Items"
                ],
                "description": "Get all items from given room",
                "operationId": "getItemsByRoom",
                "parameters": [
                    {
                        "name": "room_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Items/createNewItems": {
            "post": {
                "tags": [
                    "Items"
                ],
                "operationId": "createNewItems",
                "requestBody": {
                    "description": "Create new items or one single item",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "generate_options": {
                                        "properties": {
                                            "item_quantity": {
                                                "type": "integer",
                                                "example": 0
                                            },
                                            "name_pattern": {
                                                "type": "string",
                                                "example": "myitem1"
                                            },
                                            "with_qrcodes": {
                                                "type": "boolean",
                                                "example": false
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "item": {
                                        "properties": {
                                            "room_id": {
                                                "type": "integer",
                                                "example": 0
                                            },
                                            "item_name": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "country_of_origin": {
                                                "type": "string",
                                                "example": "EN"
                                            },
                                            "serial_no": {
                                                "type": "string",
                                                "example": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Items/updateItem": {
            "put": {
                "tags": [
                    "Items"
                ],
                "operationId": "updateItem",
                "requestBody": {
                    "description": "Update item information",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "item_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "item_name": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "country_of_origin": {
                                        "type": "string",
                                        "example": "EN"
                                    },
                                    "serial_no": {
                                        "type": "string",
                                        "example": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Items/deleteItem/{item_id}": {
            "delete": {
                "tags": [
                    "Items"
                ],
                "description": "Delete item",
                "operationId": "deleteItem",
                "parameters": [
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "ID of item to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Item is in active inventory process"
                    },
                    "404": {
                        "description": "Item not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Items/scanItem": {
            "post": {
                "tags": [
                    "Items"
                ],
                "operationId": "scanItem",
                "requestBody": {
                    "description": "Insert scanned item",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "item_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "worker_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "task_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "note": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "item_image": {
                                        "type": "string",
                                        "format": "base64",
                                        "example": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/QRCodes/generateQRCodes": {
            "post": {
                "tags": [
                    "QRCodes"
                ],
                "operationId": "generateQRCodes",
                "requestBody": {
                    "description": "Create QR codes, upload them to firebase storage and save info in database <br/> Note that `amount` of desired qr codes and amount of `qrcode_data` needs to be equal<br/><br/>`Note` if `forSingleItem` is set to true, that means that user wants to generate qr code for one item that has no qr code",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "forSingleItem": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "qrcode_options": {
                                        "properties": {
                                            "saveToDir": {
                                                "type": "string",
                                                "example": "myRoom1_27-07-2024/"
                                            },
                                            "amount": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "qrcode_data": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "room_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "item_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "item_name": {
                                                    "type": "string",
                                                    "example": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "room_id": 1,
                                                "item_id": 1,
                                                "item_name": "string"
                                            },
                                            {
                                                "room_id": 2,
                                                "item_id": 2,
                                                "item_name": "string"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/QRCodes/checkScannedQRCode": {
            "post": {
                "tags": [
                    "QRCodes"
                ],
                "operationId": "checkScannedQRCode",
                "requestBody": {
                    "description": "Check scanned qr code brefore saving scanned item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "worker_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "room_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "task_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "item_id": {
                                        "type": "integer",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Forbbiden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Teams/getActiveWorkersInCompany/{company_id}": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "description": "Get all active workers in current company",
                "operationId": "getActiveWorkersInCompany",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Teams/getAllTeamsInCompany/{company_id}": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "description": "Get all teams",
                "operationId": "getAllTeams",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Teams/getTeamMembers/{team_id}": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "description": "Get team members for single team",
                "operationId": "getTeamMembers",
                "parameters": [
                    {
                        "name": "team_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Teams/createNewTeam": {
            "post": {
                "tags": [
                    "Teams"
                ],
                "operationId": "createNewTeam",
                "requestBody": {
                    "description": "Create new team for company",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "team_name": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "worker_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "workers_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "example": [
                                            0,
                                            1,
                                            2
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Teams/addTeamMembers": {
            "post": {
                "tags": [
                    "Teams"
                ],
                "operationId": "addTeamMembers",
                "requestBody": {
                    "description": "Add new workers to exsisting team",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "team_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "workers_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "example": [
                                            0,
                                            1,
                                            2
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Teams/removeTeamMemberFromTeam/{team_id}/{team_member_id}": {
            "delete": {
                "tags": [
                    "Teams"
                ],
                "description": "Remove team meber from team",
                "operationId": "removeTeamMemberFromTeam",
                "parameters": [
                    {
                        "name": "team_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "team_member_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Team member not found or already deleted"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Teams/deleteTeam/{team_id}": {
            "delete": {
                "tags": [
                    "Teams"
                ],
                "description": "Delete entire team",
                "operationId": "deleteTeam",
                "parameters": [
                    {
                        "name": "team_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Team not found or already deleted"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Tasks/addTask": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "operationId": "addTask",
                "requestBody": {
                    "description": "Create new task",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "team_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "room_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2017-07-21T17:32:28Z"
                                    },
                                    "worker_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "note": {
                                        "type": "string",
                                        "example": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Tasks/getAllTasksByCompany/{company_id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "description": "Get all tasks in company",
                "operationId": "getAllTasksByCompany",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Tasks/taskCurrentStatus/{task_id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "description": "Get all tasks in room",
                "operationId": "taskCurrentStatus",
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Tasks/endTask": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "operationId": "endTask",
                "requestBody": {
                    "description": "End current task",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "task_summary": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Tasks/getAllTasksForWorker/{worker_id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "description": "Get all tasks in company",
                "operationId": "getAllTasksForWorker",
                "parameters": [
                    {
                        "name": "worker_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Tasks/archiveTask": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "operationId": "archiveTask",
                "requestBody": {
                    "description": "Archive tasks that are over",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "worker_id": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "team_name": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "room_name": {
                                        "type": "string",
                                        "example": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Tasks/getArchivedTasksByUser/{worker_id}/{role}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "description": "Get archived task for single user",
                "operationId": "getArchivedTasksByUser",
                "parameters": [
                    {
                        "name": "worker_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "role",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Tasks/notifyUsersAboutUpcomingTask": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "description": "Notify users about upcoming tasks",
                "operationId": "notifyUsersAboutUpcomingTask",
                "responses": {
                    "200": {
                        "description": "An example resource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Admins/loginAdmin": {
            "post": {
                "tags": [
                    "Admins"
                ],
                "operationId": "loginAdmin",
                "requestBody": {
                    "description": "Authenticate admin",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "example@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Your password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Wrong credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter the Bearer Authorization string as follows: `Bearer Generated-JWT-Token`",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "FirebaseStorage",
            "description": "FirebaseStorage"
        },
        {
            "name": "Logs",
            "description": "Logs"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Companies",
            "description": "Companies"
        },
        {
            "name": "Rooms",
            "description": "Rooms"
        },
        {
            "name": "Items",
            "description": "Items"
        },
        {
            "name": "QRCodes",
            "description": "QRCodes"
        },
        {
            "name": "Teams",
            "description": "Teams"
        },
        {
            "name": "Tasks",
            "description": "Tasks"
        },
        {
            "name": "Admins",
            "description": "Admins"
        }
    ]
}